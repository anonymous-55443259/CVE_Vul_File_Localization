[{"role": "system", "content": "You are a software vulnerability expert familiar with Common Vulnerabilities and Exposures (CVE) in the National Vulnerability Database (NVD). You will be given a CVE description and some supplementary information about the vulnerability.\n\nYour task is to extract the key content from the supplementary information and integrate it into the original description. The key content includes:\n* The software components within a software product that are affected by the vulnerability, e.g. file name, function name, and module name;\n* An explanation of an attack type using the vulnerability;\n* Any attack vectors that can make use of the vulnerabilit;\n* The impact of the vulnerability;\n\nDescriptions often follow this template: [VULNTYPE] in [COMPONENT] in [VENDOR] [PRODUCT] [VERSION] allows [ATTACKER] to [IMPACT] via [VECTOR].\n**The output should be a complete paragraph.**\n**Add new content, do not delete the original description.**\n\nThe supplementary information provided may be minimal or missing, you can use two tools:\n* google_search: Search for key terms mentioned in the original description.\n* access_web_page: Retrieve the content of a specified web page, either from the supplementary information or from Google search results."}, {"role": "user", "content": "# original description:\nPHP 5 before 5.2.3 does not enforce the open_basedir or safe_mode restriction in certain cases, which allows context-dependent attackers to determine the existence of arbitrary files by checking if the readfile function returns a string.  NOTE: this issue might also involve the realpath function.\n# supplementary information:\nBug\u00a0#41492\nopen_basedir bypass via readfile()\nSubmitted:\n2007-05-24 15:55 UTC\nModified:\n2007-05-27 17:33 UTC\nFrom:\nbugs dot php dot net at chsc dot dk\nAssigned:\nStatus:\nClosed\nPackage:\nSafe Mode/open_basedir\nPHP Version:\n5.2.2\nOS:\nLinux\nPrivate report:\nNo\nCVE-ID:\nNone\nView\nDeveloper\nEdit\n[2007-05-24 15:55 UTC] bugs dot php dot net at chsc dot dk\nDescription:\n------------\nfile_exists() etc. does not allow checking the existence of files outside the directories specified in open_basedir.\nAppearently readfile() does *not* have this restriction and thus allows checking the existence of files anywhere in the filesystem. If realpath($filename) returns a string (i.e. not false), the file exists. This is a circumvention of the open_basedir restriction in file_exists() etc.\nReproduce code:\n---------------\nThe following should always be true, but it isn't when $dir is outside the directories specified in open_basedir:\nvar_dump(file_exists($dir) === (bool) realpath($dir));\nPatches\nPull Requests\nHistoryAllCommentsChangesGit/SVN commitsRelated reports\n[2007-05-27 17:33 UTC] iliaa@php.net\nThis bug has been fixed in CVS.\nSnapshots of the sources are packaged every three hours; this change\nwill be in the next snapshot. You can grab the snapshot at\nhttp://snaps.php.net/.\nThank you for the report, and for helping us make PHP better.Security\nGet Gentoo!\ngentoo.org sites\ngentoo.org\nWiki\nBugs\nForums\nPackages\nPlanet\nArchives\nSources\nInfra Status\nHome\nStay informed\nAdvisories\nPHP: Multiple vulnerabilities\n\u2014 GLSA 200710-02\nPHP contains several vulnerabilities including buffer and integer overflows\nwhich could lead to the remote execution of arbitrary code.\nAffected packages\nPackage\ndev-lang/php on all architectures\nAffected versions\n< 5.2.4_p20070914-r2\nUnaffected versions\n>= 5.2.4_p20070914-r2\nBackground\nPHP is a widely-used general-purpose scripting language that is\nespecially suited for Web development and can be embedded into HTML.\nDescription\nSeveral vulnerabilities were found in PHP. Mattias Bengtsson and Philip\nOlausson reported integer overflows in the gdImageCreate() and\ngdImageCreateTrueColor() functions of the GD library which can cause\nheap-based buffer overflows (CVE-2007-3996). Gerhard Wagner discovered\nan integer overflow in the chunk_split() function that can lead to a\nheap-based buffer overflow (CVE-2007-2872). Its incomplete fix caused\nincorrect buffer size calculation due to precision loss, also resulting\nin a possible heap-based buffer overflow (CVE-2007-4661 and\nCVE-2007-4660). A buffer overflow in the sqlite_decode_binary() of the\nSQLite extension found by Stefan Esser that was addressed in PHP 5.2.1\nwas not fixed correctly (CVE-2007-1887).\nStefan Esser discovered an error in the zend_alter_ini_entry() function\nhandling a memory_limit violation (CVE-2007-4659). Stefan Esser also\ndiscovered a flaw when handling interruptions with userspace error\nhandlers that can be exploited to read arbitrary heap memory\n(CVE-2007-1883). Disclosure of sensitive memory can also be triggered\ndue to insufficient boundary checks in the strspn() and strcspn()\nfunctions, an issue discovered by Mattias Bengtsson and Philip Olausson\n(CVE-2007-4657)\nStefan Esser reported incorrect validation in the FILTER_VALIDATE_EMAIL\nfilter of the Filter extension allowing arbitrary email header\ninjection (CVE-2007-1900). NOTE: This CVE was referenced, but not fixed\nin GLSA 200705-19.\nStanislav Malyshev found an error with unknown impact in the\nmoney_format() function when processing \"%i\" and \"%n\" tokens\n(CVE-2007-4658). zatanzlatan reported a buffer overflow in the\nphp_openssl_make_REQ() function with unknown impact when providing a\nmanipulated SSL configuration file (CVE-2007-4662). Possible memory\ncorruption when trying to read EXIF data in exif_read_data() and\nexif_thumbnail() occurred with unknown impact.\nSeveral vulnerabilities that allow bypassing of open_basedir and other\nrestrictions were reported, including the glob() function\n(CVE-2007-4663), the session_save_path(), ini_set(), and error_log()\nfunctions which can allow local command execution (CVE-2007-3378),\ninvolving the readfile() function (CVE-2007-3007), via the Session\nextension (CVE-2007-4652), via the MySQL extension (CVE-2007-3997) and\nin the dl() function which allows loading extensions outside of the\nspecified directory (CVE-2007-4825).\nMultiple Denial of Service vulnerabilities were discovered, including a\nlong \"library\" parameter in the dl() function (CVE-2007-4887), in\nseveral iconv and xmlrpc functions (CVE-2007-4840 and CVE-2007-4783),\nin the setlocale() function (CVE-2007-4784), in the glob() and\nfnmatch() function (CVE-2007-4782 and CVE-2007-3806), a floating point\nexception in the wordwrap() function (CVE-2007-3998), a stack\nexhaustion via deeply nested arrays (CVE-2007-4670), an infinite loop\ncaused by a specially crafted PNG image in the png_read_info() function\nof libpng (CVE-2007-2756) and several issues related to array\nconversion.\nImpact\nRemote attackers might be able to exploit these issues in PHP\napplications making use of the affected functions, potentially\nresulting in the execution of arbitrary code, Denial of Service,\nexecution of scripted contents in the context of the affected site,\nsecurity bypass or information leak.\nWorkaround\nThere is no known workaround at this time.\nResolution\nAll PHP users should upgrade to the latest version:\n# emerge --sync\n# emerge --ask --oneshot --verbose \">=dev-lang/php-5.2.4_p20070914-r2\"\nReferences\nCVE-2007-1883\nCVE-2007-1887\nCVE-2007-1900\nCVE-2007-2756\nCVE-2007-2872\nCVE-2007-3007\nCVE-2007-3378\nCVE-2007-3806\nCVE-2007-3996\nCVE-2007-3997\nCVE-2007-3998\nCVE-2007-4652\nCVE-2007-4657\nCVE-2007-4658\nCVE-2007-4659\nCVE-2007-4660\nCVE-2007-4661\nCVE-2007-4662\nCVE-2007-4663\nCVE-2007-4670\nCVE-2007-4727\nCVE-2007-4782\nCVE-2007-4783\nCVE-2007-4784\nCVE-2007-4825\nCVE-2007-4840\nCVE-2007-4887\nGLSA 200705-19\nRelease date\nOctober 07, 2007\nLatest revision\nOctober 07, 2007: 01\nSeverity\nhigh\nExploitable\nremote\nBugzilla entries\n179158\n180556\n191034\nQuestions or comments?\nPlease feel free to contact us.\n\u00a9 2001\u20132020 Gentoo Foundation, Inc.\nGentoo is a trademark of the Gentoo Foundation, Inc.\nThe contents of this document, unless otherwise expressly stated, are licensed under the\nCC-BY-SA-4.0 license.\nThe Gentoo name and logo usage guidelines apply."}, {"role": "assistant", "content": "PHP 5 before 5.2.3 does not enforce the open_basedir or safe_mode restriction in certain cases, which allows context-dependent attackers to determine the existence of arbitrary files by checking if the readfile function returns a string. This issue might also involve the realpath function. Specifically, the vulnerability allows bypassing the open_basedir restriction via the readfile() function, which does not have the same restriction as the file_exists() function. This means that while file_exists() cannot check the existence of files outside the directories specified in open_basedir, readfile() can, thus allowing the checking of files anywhere in the filesystem. If realpath($filename) returns a string (i.e., not false), it indicates that the file exists, circumventing the intended restrictions of open_basedir in file_exists() and similar functions. This vulnerability, identified as open_basedir bypass via readfile(), was reported and subsequently fixed in the PHP source as of CVS updates by May 27, 2007. The impact of this vulnerability is significant as it allows attackers to potentially identify and target files outside of restricted directories, leading to information disclosure or further attacks based on the existence of specific files."}]
